# we use $schema to refer to the version this validated with
# notice that these urls are not yet available on the s3d.rs domain,
# so consider it a metaphore for now
$schema: "https://s3d.rs/schemas/v0.0.1/config.schema.json"

# There is no such thing as a $grandschema in json-schema
# so why would I leave this here?
$grandschema: "https://json-schema.org/draft/2020-12/schema"

# Local configuration properties go here
# These are used to control the behavior of the s3d server
# and specify the local resources it uses/exposes on the localhost.
local:

  # s3d default listening address is http://localhost:3333
  port: 3333

  # how much time we can serve a cached object without validating it again
  # increasing it will allow to sustain longer disconnections from the remote server,
  # but will also increase our incosistencies with the remote server
  ttl: 1h30m

  max_disk_usage: 10Gi

  # when fuse_mount_point is set, s3d will provide a fuse mount point
  # Those fuse callbacks are received by s3d (using fuser)
  # but it doesn't do much yet.
  fuse_mount_point: ""
  # fuse_mount_point: /tmp/s3d
  # fuse_mount_point: /mnt/s3d

# Remotes configuration properties go here
# We can define multiple remotes, each with their own configuration
# BUT actually for now we don't even read this list at all,
# and just read the default remote from AWS config env vars (or config file).
# We can leave this list empty for now but kept the below example as a placeholder.
remotes:
  - name: hub
    endpoint: localhost:9000
    credentialsProvider: env
    # credentialsProvider: aws
    # credentialsProvider: iam://localhost:9001
    credentials:
      access_key: access_key
      secret_key: secret_key

    # The profile name is used to locate config and credentials
    # as described in "Configuration settings and precedence"
    # here https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html
    # profile: team-s3d
